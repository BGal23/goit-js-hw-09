{"mappings":"YAAA,IAEIA,EAFEC,EAAQC,SAASC,iBAAiB,SAClCC,EAAYF,SAASG,cAAc,UA8BzCD,EAAUE,iBAAiB,SAhBX,SAACC,GACfA,EAAMC,iBACN,IAAIC,EAAQ,EACRC,EAAuB,EAAfT,EAAM,GAAGU,MACrBC,YAAW,WACTZ,EAAUa,aAAY,YAhBJ,SAACC,EAAUJ,GACTK,KAAKC,SAAW,GAGpCC,QAAQC,IAAI,uBAAwCC,OAAfL,EAAS,QAAYK,OAANT,EAAM,OAG1DO,QAAQC,IAAI,sBAAqCC,OAAfL,EAAS,QAAYK,OAANT,EAAM,M,CAUrDU,CAAcX,EAAOC,GACrBD,IACAC,GAA+B,EAAfT,EAAM,GAAGU,MACrBF,EAAQ,GAAKR,EAAM,GAAGU,OACxBU,cAAcrB,E,GAEfC,EAAM,GAAGU,M,GACXV,EAAM,GAAGU,MAAQV,EAAM,GAAGU,M","sources":["src/js/03-promises.js"],"sourcesContent":["const input = document.querySelectorAll(\"input\")\nconst btnCreate = document.querySelector(\"button\")\nlet timerId;\n\nconst createPromise = (position, delay) => {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`)\n  } else {\n    // Reject\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`)\n  }\n}\n\nconst newTask = (event) => {\n  event.preventDefault()\n  let meter = 1;\n  let delay = input[0].value*1;\n  setTimeout(() => {\n    timerId = setInterval(() => {\n      createPromise(meter, delay)\n      meter++;\n      delay = delay + input[1].value*1\n      if (meter - 1 >= input[2].value) {\n        clearInterval(timerId)\n      }\n    }, input[1].value)\n  }, input[0].value - input[1].value)\n}\n\nbtnCreate.addEventListener(\"click\", newTask)"],"names":["$ce04d3a99e08e73b$var$timerId","$ce04d3a99e08e73b$var$input","document","querySelectorAll","$ce04d3a99e08e73b$var$btnCreate","querySelector","addEventListener","event","preventDefault","meter","delay","value","setTimeout","setInterval","position","Math","random","console","log","concat","$ce04d3a99e08e73b$var$createPromise","clearInterval"],"version":3,"file":"03-promises.5fd6540a.js.map"}