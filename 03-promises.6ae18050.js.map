{"mappings":"AAAA,MAAMA,EAAQC,SAASC,iBAAiB,SAClCC,EAAYF,SAASG,cAAc,UACzC,IAAIC,EAEJ,MAAMC,EAAgB,CAACC,EAAUC,KACTC,KAAKC,SAAW,GAGpCC,QAAQC,IAAI,uBAAqBL,QAAiBC,OAGlDG,QAAQC,IAAI,sBAAoBL,QAAeC,MAAU,EAqB7DL,EAAUU,iBAAiB,SAjBXC,IACdA,EAAMC,iBACN,IAAIC,EAAQ,EACRR,EAAQS,OAAOjB,EAAM,GAAGkB,OAC5BC,YAAW,KACTb,EAAcU,EAAOR,GACrBH,EAAUe,aAAY,KACpBJ,IACAR,GAASS,OAAOjB,EAAM,GAAGkB,OACzBZ,EAAcU,EAAOR,GACjBQ,EAAQC,OAAOjB,EAAM,GAAGkB,OAAS,GACnCG,cAAchB,EAAQ,GAEvBL,EAAM,GAAGkB,MAAM,GACjBlB,EAAM,GAAGkB,MAAM","sources":["src/js/03-promises.js"],"sourcesContent":["const input = document.querySelectorAll(\"input\")\nconst btnCreate = document.querySelector(\"button\")\nlet timerId;\n\nconst createPromise = (position, delay) => {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`)\n  } else {\n    // Reject\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`)\n  }\n}\n\nconst newTask = event => {\n  event.preventDefault();\n  let meter = 1;\n  let delay = Number(input[0].value);\n  setTimeout(() => {\n    createPromise(meter, delay);\n    timerId = setInterval(() => {\n      meter++;\n      delay += Number(input[1].value);\n      createPromise(meter, delay);\n      if (meter > Number(input[2].value) - 1) {\n        clearInterval(timerId);\n      }\n    }, input[1].value);\n  }, input[0].value);\n};\n\nbtnCreate.addEventListener(\"click\", newTask)"],"names":["$47d4ff9957288465$var$input","document","querySelectorAll","$47d4ff9957288465$var$btnCreate","querySelector","$47d4ff9957288465$var$timerId","$47d4ff9957288465$var$createPromise","position","delay","Math","random","console","log","addEventListener","event","preventDefault","meter","Number","value","setTimeout","setInterval","clearInterval"],"version":3,"file":"03-promises.6ae18050.js.map"}