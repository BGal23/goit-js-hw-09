{"mappings":"YAAA,IAEIA,EAFEC,EAAQC,SAASC,iBAAiB,SAClCC,EAAYF,SAASG,cAAc,UAGnCC,EAAgB,SAACC,EAAUC,GACTC,KAAKC,SAAW,GAGpCC,QAAQC,IAAI,uBAAwCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,OAG1DG,QAAQC,IAAI,sBAAqCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,EAqB3DJ,EAAUU,iBAAiB,SAjBX,SAAAC,GACdA,EAAMC,iBACN,IAAIC,EAAQ,EACRT,EAAQU,OAAOjB,EAAM,GAAGkB,OAC5BC,YAAW,WACTd,EAAcW,EAAOT,GACrBR,EAAUqB,aAAY,WACpBJ,IACAT,GAASU,OAAOjB,EAAM,GAAGkB,OACzBb,EAAcW,EAAOT,GACjBS,EAAQC,OAAOjB,EAAM,GAAGkB,OAAS,GACnCG,cAActB,E,GAEfC,EAAM,GAAGkB,M,GACXlB,EAAM,GAAGkB,M","sources":["src/js/03-promises.js"],"sourcesContent":["const input = document.querySelectorAll(\"input\")\nconst btnCreate = document.querySelector(\"button\")\nlet timerId;\n\nconst createPromise = (position, delay) => {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`)\n  } else {\n    // Reject\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`)\n  }\n}\n\nconst newTask = event => {\n  event.preventDefault();\n  let meter = 1;\n  let delay = Number(input[0].value);\n  setTimeout(() => {\n    createPromise(meter, delay);\n    timerId = setInterval(() => {\n      meter++;\n      delay += Number(input[1].value);\n      createPromise(meter, delay);\n      if (meter > Number(input[2].value) - 1) {\n        clearInterval(timerId);\n      }\n    }, input[1].value);\n  }, input[0].value);\n};\n\nbtnCreate.addEventListener(\"click\", newTask)"],"names":["$ce04d3a99e08e73b$var$timerId","$ce04d3a99e08e73b$var$input","document","querySelectorAll","$ce04d3a99e08e73b$var$btnCreate","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Math","random","console","log","concat","addEventListener","event","preventDefault","meter","Number","value","setTimeout","setInterval","clearInterval"],"version":3,"file":"03-promises.8780ff5e.js.map"}